Background
Without making the technical to bland and boring. Going to cover a few important aspects of this mini project 

Static vs Dyncamic

Initally wanted to get started with static, altfghough it boiled down to looking at code I didnt know or needed "asstaicne" with.

Dynamic I thought was better and "beginner" freindly when thinking about running malware ina  secure enviroment monitering whats happening from another machine. 
What the malwares is accessing, what its trying to access or change? Who its trying to communicate and share with and what information or recourses uits trying to maniupluyate. Wanted to make sure not to use automated tools

The three malware strands we took a look out are:

Interesting to note that in doing research, I needed to both figure out how to make my envioremnt
Secure 
legititmate

In starting with legitimate, their are some strands of malware that run module in C+ and C that do enviroment checks within its host.
Flare helps to reduce this a bit, but to fully eleminate this check. Static code analyusis is needed to if the code is not deobfuucate
For right now Flare is needed here to better configure our Windows vms. 

For secureity, this boils down to making sure two thigns dont happen.

-VM escape doesnt occur(typically already done in Flare)

-Malware does not reach outside of its network or DHCP scope and spread to main betwork
This can be done through creating our own subnet with just enough computers to do the following
Math for networking the 128 subnet 

https://www.calculator.net/ip-subnet-calculator.html?cclass=a&csubnet=30&cip=128.77.40.118&ctype=ipv4&x=Calculate
Number of Usable Hosts:	2
Main computer = 128.77.40.117 
Computer with Wireshark = 128.77.40.118

Making sure that any ping request or broadcasts that have are done by the malware can only reach the other computer. 






In doing inital research baout how to get started with reverse engineering. 

hosted and managed on https://github.com/mandiant/flare-vm


Stran of https://chocolatey.org/ & https://boxstarter.org/
