Background
Without making the technical to bland and boring. Going to cover a few important aspects of this mini project 

Static vs Dynamic

Initially wanted to get started with static, although it boiled down to looking at code I didn’t know or needed "assistance" with.

Dynamic I thought was better and "beginner" friendly when thinking about running malware ina  secure environment monitoring whats happening from another machine. 
What the malwares is accessing, what its trying to access or change? Who its trying to communicate and share with and what information or recourses uits trying to manipulate. Wanted to make sure not to use automated tools

The three malware strands we took a look out are:

Interesting to note that in doing research, I needed to both figure out how to make my environment
Secure 
legitimate

In starting with legitimate, there are some strands of malware that run module in C+ and C that do environment checks within its host.
Flare helps to reduce this a bit, but to fully eliminate this check. Static code analysis is needed to if the code is not deobfuscate
For right now Flare is needed here to better configure our Windows vms. 

For security, this boils down to making sure two things dont happen.

-VM escape doesn’t occur(typically already done in Flare)

-Malware does not reach outside of its network or DHCP scope and spread to main betwork
This can be done through creating our own subnet with just enough computers to do the following
Math for networking the 128 subnet 

https://www.calculator.net/ip-subnet-calculator.html?cclass=a&csubnet=30&cip=128.77.40.118&ctype=ipv4&x=Calculate
Number of Usable Hosts:	2
Main computer = 128.77.40.117 
Computer with Wireshark = 128.77.40.118

Making sure that any ping request or broadcasts that have are done by the malware can only reach the other computer. 






In doing initial research about how to get started with reverse engineering. 

hosted and managed on https://github.com/mandiant/flare-vm


Stran of https://chocolatey.org/ & https://boxstarter.org/
